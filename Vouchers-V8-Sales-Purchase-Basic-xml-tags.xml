<!-- These XML tags are added to Excel sheet at run-time by UDIMAGIC  -->
<XMLTAGS CELLREFERENCE="A1" FROMROW="3" xmlns:UDF="TallyUDF">
	<!-- Specifies that this (i.e Column as mentioned above) is the key field -->
	<COLUMNNAME.LIST>
		<COLUMNNAME>ID</COLUMNNAME>
		<COLUMNNAME>NAME</COLUMNNAME>
	</COLUMNNAME.LIST>
	<!-- Create VOUCHERTYPE Master -->
	<MASTER TYPE="VOUCHERTYPE">
		<NAME.LIST TYPE="String">
			<NAME COLUMNREFERENCE="C"/>
		</NAME.LIST>
		<PARENT COLUMNREFERENCE="B"/>
		<ISDEEMEDPOSITIVE FORMULA="=if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),&quot;No&quot;,&quot;Yes&quot;)"/>
		<NUMBERINGMETHOD>Manual</NUMBERINGMETHOD>
	</MASTER>
	<!-- Create  Sales/Purchase Ledger Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(AA#))&gt;0,AA#,if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;debit note&quot;),&quot;PURCHASE&quot;,&quot;SALES&quot;))"/>
		</NAME.LIST>
		<PARENT FORMULA="=if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;debit note&quot;),&quot;Purchase Accounts&quot;,&quot;Sales Accounts&quot;)"/>
		<TAXTYPE>Others</TAXTYPE>
		<ISBILLWISEON>No</ISBILLWISEON>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK FORMULA="=if(len(trim(K#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<USEFORVAT>No</USEFORVAT>
		<GSTAPPLICABLE SKIP="=Round(U#+W#+Y#,2)=0" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply : Goods or Services -->
		<GSTTYPEOFSUPPLY FORMULA="=if(len(trim(K#))=0,&quot;Services&quot;,&quot;Goods&quot;)"/>
	</MASTER>
	<!-- Create Party LEDGER Masters -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="H"/>
		</NAME.LIST>
		<PARENT FORMULA="=if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;debit note&quot;),&quot;Sundry Creditors&quot;,&quot;Sundry Debtors&quot;)"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<ADDITIONALNAME COLUMNREFERENCE="H"/>
		<ISBILLWISEON>Yes</ISBILLWISEON>
		<!-- GST fields for PARTY LEDGER -->
		<GSTREGISTRATIONTYPE FORMULA="=if(len(trim(I#))=0,&quot;Unregistered&quot;,&quot;Regular&quot;)"/>
		<!-- GSTIN / UIN -->
		<PARTYGSTIN FORMULA="=trim(I#)"/>
		<COUNTRYNAME SKIP="=len(trim(J#))=0">India</COUNTRYNAME>
		<!-- 2017-09-14: STATENAME is converted to proper-case  -->
		<STATENAME FORMULA="=proper(trim(J#))"/>
		<LEDSTATENAME FORMULA="=proper(trim(J#))"/>
	</MASTER>
	<!-- Create Trade discount Master -->
	<MASTER TYPE="LEDGER">
	  <NAME.LIST>
	    <NAME FORMULA="=if(len(trim(T#))=0,&quot;Discount&quot;,T#)"/>
	  </NAME.LIST>
	  <PARENT>Indirect Expenses</PARENT>
	  <ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	  <AFFECTSSTOCK>No</AFFECTSSTOCK>
	  <GSTAPPLICABLE FORMULA="=&quot;~[~ Not Applicable&quot;"/>
	  <UDF:VATDEALERNATURE.LIST DESC="`VATDealerNature`" ISLIST="YES" TYPE="String" INDEX="10031">
	   <UDF:VATDEALERNATURE DESC="`VATDealerNature`">Discount</UDF:VATDEALERNATURE>
	  </UDF:VATDEALERNATURE.LIST>
	</MASTER>

	<!-- Create IGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(AB#))&gt;0,AB#,if(Or(IsError(Round(U#,2)),len(trim(U#))=0,U#=0),&quot;&quot;,&quot;IGST &quot; &amp; U# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Integrated Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
		<!-- <RATEOFTAXCALCULATION COLUMNREFERENCE="U"/> -->
	</MASTER>
	<!-- Create CGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(AC#))&gt;0,AC#,if(Or(IsError(Round(W#,2)),len(trim(W#))=0,W#=0),&quot;&quot;,&quot;CGST &quot; &amp; W# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Central Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
		<!-- <RATEOFTAXCALCULATION COLUMNREFERENCE="W"/> -->
	</MASTER>
	<!-- Create SGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(AD#))&gt;0,AD#,if(Or(IsError(Round(Y#,2)),len(trim(Y#))=0,Y#=0),&quot;&quot;,&quot;SGST &quot; &amp; Y# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>State Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
		<!-- <RATEOFTAXCALCULATION COLUMNREFERENCE="Y"/> -->
	</MASTER>
	<!-- Create a single LEDGER Master -->
	<MASTER TYPE="LEDGER" SINGLERECORD="Yes">
		<NAME.LIST>
			<NAME>Round Off</NAME>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create UNIT Master -->
	<MASTER TYPE="UNIT">
		<NAME COLUMNREFERENCE="M"/>
		<ISSIMPLEUNIT>Yes</ISSIMPLEUNIT>
		<GSTREPUOM SKIP="=Not(trim(M#)=&quot;nos&quot;)">NOS-NUMBERS</GSTREPUOM>
		<GSTREPUOM SKIP="=Not(trim(M#)=&quot;kgs&quot;)">KGS-KILOGRAMS</GSTREPUOM>
	</MASTER>
	<!-- Create STOCKITEM Masters -->
	<MASTER TYPE="STOCKITEM">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="K"/>
		</NAME.LIST>
		<PARENT/>
		<BASEUNITS COLUMNREFERENCE="M"/>
		<!-- GST details -->
		<GSTAPPLICABLE SKIP="=And(len(trim(U#))=0,len(trim(W#))=0,len(trim(Y#))=0)" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply -->
		<GSTTYPEOFSUPPLY>Goods</GSTTYPEOFSUPPLY>
		<GSTDETAILS.LIST SKIP="=And(len(trim(U#))=0,len(trim(W#))=0,len(trim(Y#))=0)">
			<APPLICABLEFROM>20170701</APPLICABLEFROM>
			<CALCULATIONTYPE>On Value</CALCULATIONTYPE>
			<HSNCODE COLUMNREFERENCE="L"/>
			<TAXABILITY FORMULA="=If(U#+W#+Y#&gt;0,&quot;Taxable&quot;,&quot;Exempt&quot;)"/>
			<STATEWISEDETAILS.LIST>
				<STATENAME>~[~ Any</STATENAME>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Central Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(W#&gt;0,W#,If(U#&gt;0,Round(U#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>State Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(Y#&gt;0,Y#,If(U#&gt;0,Round(U#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Integrated Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(U#&gt;0,U#,W#+Y#)"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Cess</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<!-- Hard coded -->
					<GSTRATE>0</GSTRATE>
				</RATEDETAILS.LIST>
			</STATEWISEDETAILS.LIST>
			<TEMPGSTDETAILSLABRATES.LIST>
			</TEMPGSTDETAILSLABRATES.LIST>
		</GSTDETAILS.LIST>
	</MASTER>
	<VOUCHER8>
		<GUID FORMULA="=+&quot;udi-HZ3K9T-&quot; &amp; A# &amp; &quot;-&quot; &amp; C# &amp; &quot;-&quot; &amp; E#"/>
		<DATE COLUMNREFERENCE="E"/>
		<EFFECTIVEDATE COLUMNREFERENCE="E"/>
		<VOUCHERTYPENAME COLUMNREFERENCE="C"/>
		<VOUCHERNUMBER COLUMNREFERENCE="D"/>
		<REFERENCE COLUMNREFERENCE="F"/>
		<NARRATION COLUMNREFERENCE="AE"/>
		<ISINVOICE>Yes</ISINVOICE>
		<PERSISTEDVIEW FORMULA="=if(len(trim(K#))=0,&quot;Accounting Voucher View&quot;,&quot;Invoice Voucher View&quot;)"/>
		<!-- For Purchase -->
		<UDF:REFERENCEDATE.LIST DESC="`ReferenceDate`" ISLIST="YES" TYPE="Date">
			<UDF:REFERENCEDATE DESC="`ReferenceDate`" COLUMNREFERENCE="G"/>
		</UDF:REFERENCEDATE.LIST>
		<REFERENCEDATE COLUMNREFERENCE="G"/>
		<!-- GSTIN / UIN -->
		<PARTYGSTIN FORMULA="=trim(I#)"/>
		<!-- For compatibility with Tally ERP 9 Release 6.1.1 - Cash Purchase entry -->
		<GSTREGISTRATIONTYPE FORMULA="=if(len(trim(I#))=0,&quot;Unregistered&quot;,&quot;Regular&quot;)"/>
		<!-- 2017-09-14: STATENAME is converted to proper-case  -->
		<STATENAME FORMULA="=proper(trim(J#))"/>
		<PARTYNAME COLUMNREFERENCE="H"/>
		<PARTYLEDGERNAME COLUMNREFERENCE="H"/>
		<BASICBASEPARTYNAME COLUMNREFERENCE="H"/>
		<BASICBUYERNAME COLUMNREFERENCE="H"/>
		<!-- Other GST details -->
		<GSTNATUREOFRETURN SKIP="=IsError(Match(trim(B#[1]),\123&quot;credit note&quot;,&quot;debit note&quot;\125,0))">01-Sales Return</GSTNATUREOFRETURN>
		<!-- Party Ledger -->
		<LEDGERENTRIES.LIST ALTERNATETAGNAME="=if(len(trim(K#[1]))=0,&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="H"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),&quot;No&quot;,&quot;Yes&quot;)"/>
			<AMOUNT FORMULA="=Round({Round(Q#,2)-Round(S#,2)+Round(V#,2)+Round(X#,2)+Round(Z#,2)},if(trim(AF#)=&quot;yes&quot;,0,2))*if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),1,-1)"/>
			<BILLALLOCATIONS.LIST SKIP="=Len(trim(D#))=0">
				<NAME COLUMNREFERENCE="D"/>
				<BILLTYPE>New Ref</BILLTYPE>
				<AMOUNT FORMULA="=Round({Round(Q#,2)-Round(S#,2)+Round(V#,2)+Round(X#,2)+Round(Z#,2)},if(trim(AF#)=&quot;yes&quot;,0,2))*if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),1,-1)"/>
			</BILLALLOCATIONS.LIST>
		</LEDGERENTRIES.LIST>
		<!-- Sales/Purchase Ledger -->
		<LEDGERENTRIES.LIST SCROLL="YES" SKIP="=Not(len(trim(K#))=0)" ALTERNATETAGNAME="=if(len(trim(K#[1]))=0,&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(AA#))&gt;0,AA#,if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;debit note&quot;),&quot;PURCHASE&quot;,&quot;SALES&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(Q#,2)*if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),-1,1)"/>
		</LEDGERENTRIES.LIST>

		<!-- Trade discount Ledger -->
		<LEDGERENTRIES.LIST SKIP="={Round(S#,2)}=0" ALTERNATETAGNAME="=if(len(trim(K#[1]))=0,&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
	    <LEDGERNAME FORMULA="=if(len(trim(T#))=0,&quot;Discount&quot;,T#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(S#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
		</LEDGERENTRIES.LIST>

		<!-- IGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(AB#))=0,trim(U#),trim(AB#))" SKIP="={Round(V#,2)}=0" ALTERNATETAGNAME="=if(len(trim(K#[1]))=0,&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(AB#))&gt;0,AB#,if(Or(IsError(Round(U#,2)),len(trim(U#))=0,U#=0),&quot;&quot;,&quot;IGST &quot; &amp; U# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(V#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- CGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(AC#))=0,trim(W#),trim(AC#))" SKIP="={Round(X#,2)}=0" ALTERNATETAGNAME="=if(len(trim(K#[1]))=0,&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(AC#))&gt;0,AC#,if(Or(IsError(Round(W#,2)),len(trim(W#))=0,W#=0),&quot;&quot;,&quot;CGST &quot; &amp; W# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(X#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- SGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(AD#))=0,trim(Y#),trim(AD#))" SKIP="={Round(Z#,2)}=0" ALTERNATETAGNAME="=if(len(trim(K#[1]))=0,&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(AD#))&gt;0,AD#,if(Or(IsError(Round(Y#,2)),len(trim(Y#))=0,Y#=0),&quot;&quot;,&quot;SGST &quot; &amp; Y# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(Z#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Round Off Ledger -->
		<LEDGERENTRIES.LIST SKIP="=Or(Not(trim(AF#)=&quot;yes&quot;),Round(Round({Round(Q#,2)-Round(S#,2)+Round(V#,2)+Round(X#,2)+Round(Z#,2)},0)-Round({Round(Q#,2)-Round(S#,2)+Round(V#,2)+Round(X#,2)+Round(Z#,2)},2),2)=0)" ALTERNATETAGNAME="=if(len(trim(K#[1]))=0,&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME>Round Off</LEDGERNAME>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(Round({Round(Q#,2)-Round(S#,2)+Round(V#,2)+Round(X#,2)+Round(Z#,2)},0)-Round({Round(Q#,2)-Round(S#,2)+Round(V#,2)+Round(X#,2)+Round(Z#,2)},2),2)*if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- StockItems -->
		<ALLINVENTORYENTRIES.LIST SCROLL="YES" SKIP="=Len(trim(K#))=0">
			<STOCKITEMNAME COLUMNREFERENCE="K"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),&quot;Yes&quot;,&quot;No&quot;)"/>
			<RATE COLUMNREFERENCE="O"/>
			<DISCOUNT COLUMNREFERENCE="P"/>
			<AMOUNT FORMULA="=Round(Q#,2)*if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),-1,1)"/>
			<ACTUALQTY COLUMNREFERENCE="N"/>
			<BILLEDQTY COLUMNREFERENCE="N"/>
			<ACCOUNTINGALLOCATIONS.LIST>
				<LEDGERNAME FORMULA="=if(len(trim(AA#))&gt;0,AA#,if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;debit note&quot;),&quot;PURCHASE&quot;,&quot;SALES&quot;))"/>
				<ISDEEMEDPOSITIVE FORMULA="=if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),&quot;Yes&quot;,&quot;No&quot;)"/>
				<AMOUNT FORMULA="=Round(Q#,2)*if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),-1,1)"/>
			</ACCOUNTINGALLOCATIONS.LIST>
			<BATCHALLOCATIONS.LIST>
				<GODOWNNAME>Main Location</GODOWNNAME>
				<BATCHNAME>Primary Batch</BATCHNAME>
				<DESTINATIONGODOWNNAME>Main Location</DESTINATIONGODOWNNAME>
				<AMOUNT FORMULA="=Round(Q#,2)*if(Or(lower(trim(B#[1]))=&quot;purchase&quot;,lower(trim(B#[1]))=&quot;credit note&quot;),-1,1)"/>
				<ACTUALQTY COLUMNREFERENCE="N"/>
				<BILLEDQTY COLUMNREFERENCE="N"/>
			</BATCHALLOCATIONS.LIST>

			<UDF:EIDISCOUNTRATE.LIST SKIP="=Round(R#,2)=0" DESC="`EI DiscountRate`" ISLIST="YES" TYPE="Number" INDEX="10001">
			 <UDF:EIDISCOUNTRATE DESC="`EI DiscountRate`" COLUMNREFERENCE="R"/>
			</UDF:EIDISCOUNTRATE.LIST>
			<UDF:EIDISCOUNTAMT.LIST SKIP="=Round(S#,2)=0" DESC="`EI DiscountAmt`" ISLIST="YES" TYPE="Amount" INDEX="10003">
			 <UDF:EIDISCOUNTAMT DESC="`EI DiscountAmt`" COLUMNREFERENCE="S"/>
			</UDF:EIDISCOUNTAMT.LIST>

		</ALLINVENTORYENTRIES.LIST>
	</VOUCHER8>
</XMLTAGS>

