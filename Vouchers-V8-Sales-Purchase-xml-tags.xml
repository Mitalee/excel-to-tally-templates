<!-- These XML tags are added to Excel sheet at run-time by UDIMAGIC  -->
<XMLTAGS CELLREFERENCE="A1" FROMROW="3" xmlns:UDF="TallyUDF">
	<!-- Specifies that this (i.e Column as mentioned above) is the key field -->
	<COLUMNNAME.LIST>
		<COLUMNNAME>ID</COLUMNNAME>
		<COLUMNNAME>NAME</COLUMNNAME>
	</COLUMNNAME.LIST>
	<!-- Create VOUCHERTYPE Master -->
	<MASTER TYPE="VOUCHERTYPE">
		<NAME.LIST TYPE="String">
			<NAME COLUMNREFERENCE="C"/>
		</NAME.LIST>
		<PARENT COLUMNREFERENCE="B"/>
		<!-- Is deemed positive not required -->
		<NUMBERINGMETHOD>Manual</NUMBERINGMETHOD>
	</MASTER>
	<!-- Create Sales/Purchase Ledgers -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(AY#))&gt;0,AY#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE&quot;,&quot;SALE&quot;))"/>
		</NAME.LIST>
		<PARENT FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;Purchase Accounts&quot;,&quot;Sales Accounts&quot;)"/>
		<TAXTYPE>Others</TAXTYPE>
		<ISBILLWISEON>No</ISBILLWISEON>
		<ISCOSTCENTRESON FORMULA="=if(len(trim(BA#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<AFFECTSSTOCK FORMULA="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;No&quot;,&quot;Yes&quot;)"/>
		<USEFORVAT>No</USEFORVAT>
		<GSTAPPLICABLE SKIP="=Round(BL#+BN#+BP#+BR#+BT#,2)=0" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply : Goods or Services -->
		<GSTTYPEOFSUPPLY FORMULA="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;Services&quot;,&quot;Goods&quot;)"/>
	</MASTER>
	<!-- Create Party LEDGER Masters -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="H"/>
      <NAME COLUMNREFERENCE="I"/>
		</NAME.LIST>
    <OLDNAME FORMULA="=if(len(trim(I#))=0,H#,I#)"/>

		<PARENT FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;Sundry Creditors&quot;,&quot;Sundry Debtors&quot;)"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<ADDITIONALNAME COLUMNREFERENCE="H"/>
		<ISBILLWISEON>Yes</ISBILLWISEON>
		<!-- GST fields for PARTY LEDGER -->
		<GSTREGISTRATIONTYPE SKIP="=len(trim(J#))=0">Regular</GSTREGISTRATIONTYPE>
		<!-- GSTIN / UIN -->
		<PARTYGSTIN COLUMNREFERENCE="J"/>
		<COUNTRYNAME SKIP="=len(trim(K#))=0">India</COUNTRYNAME>
		<COUNTRYOFRESIDENCE SKIP="=len(trim(K#))=0">India</COUNTRYOFRESIDENCE>
		<STATENAME COLUMNREFERENCE="K"/>
		<LEDSTATENAME COLUMNREFERENCE="K"/>
	</MASTER>
	<!-- Create IGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BV#))&gt;0,BV#,if(Or(IsError(Round(BL#,2)),len(trim(BL#))=0,BL#=0),&quot;&quot;,&quot;IGST &quot; &amp; BL# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Integrated Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create CGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BW#))&gt;0,BW#,if(Or(IsError(Round(BN#,2)),len(trim(BN#))=0,BN#=0),&quot;&quot;,&quot;CGST &quot; &amp; BN# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Central Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create SGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BX#))&gt;0,BX#,if(Or(IsError(Round(BP#,2)),len(trim(BP#))=0,BP#=0),&quot;&quot;,&quot;SGST &quot; &amp; BP# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>State Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create UT TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BY#))&gt;0,BY#,if(Or(IsError(Round(BR#,2)),len(trim(BR#))=0,BR#=0),&quot;&quot;,&quot;UT &quot; &amp; BR# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>UT Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create Cess LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BZ#))&gt;0,BZ#,if(Or(IsError(Round(BT#,2)),len(trim(BT#))=0,BT#=0),&quot;&quot;,&quot;UT &quot; &amp; BT# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Cess</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BB"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BD"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BF"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BH"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BJ"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CA"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CC"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CE"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CG"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CI"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Round Off LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CQ#))=0,&quot;Round Off&quot;,CQ#)"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Cost Category -->
	<MASTER TYPE="COSTCATEGORY">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="AZ"/>
		</NAME.LIST>
		<ALLOCATEREVENUE>Yes</ALLOCATEREVENUE>
		<ALLOCATENONREVENUE>Yes</ALLOCATENONREVENUE>
	</MASTER>
	<!-- Cost Centre -->
	<MASTER TYPE="COSTCENTRE">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BA"/>
		</NAME.LIST>
		<CATEGORY SKIP="=Len(trim(AZ#))=0" COLUMNREFERENCE="AZ"/>
		<REVENUELEDFOROPBAL>No</REVENUELEDFOROPBAL>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
	</MASTER>
	<!-- Create UNIT Master -->
	<MASTER TYPE="UNIT">
		<NAME COLUMNREFERENCE="AM"/>
		<ISSIMPLEUNIT>Yes</ISSIMPLEUNIT>
	</MASTER>
	<!-- Create Godown Masters -->
	<MASTER TYPE="GODOWN">
		<NAME COLUMNREFERENCE="AH"/>
		<PARENT/>
	</MASTER>
	<!-- Create STOCKITEM Masters -->
	<MASTER TYPE="STOCKITEM">
		<NAME.LIST>
			<!-- Create new item with Name or PartNo -->
			<NAME FORMULA="=if(len(trim(AI#))=0,AJ#,AI#)"/>
		</NAME.LIST>
		<!-- SKIP if both Name and Part No are empty -->
		<ADDITIONALNAME.LIST SKIP="=Or(len(trim(AJ#))=0,len(trim(AI#))=0)">
		  <ADDITIONALNAME COLUMNREFERENCE="AJ"/>
		</ADDITIONALNAME.LIST>
		<OLDNAME FORMULA="=if(len(trim(AJ#))=0,AI#,AJ#)"/>
		<PARENT/>
		<BASEUNITS COLUMNREFERENCE="AM"/>
		<ISBATCHWISEON FORMULA="=if((len(trim(AV#))+len(trim(AW#))+len(trim(AX#)))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<HASMFGDATE FORMULA="=if(len(trim(AW#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<ISPERISHABLEON FORMULA="=if(len(trim(AX#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<!-- GST details -->
		<GSTAPPLICABLE SKIP="=And(len(trim(BL#))=0,len(trim(BN#))=0,len(trim(BP#))=0)" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply : Hard coded -->
		<GSTTYPEOFSUPPLY>Goods</GSTTYPEOFSUPPLY>
		<GSTDETAILS.LIST SKIP="=And(len(trim(BL#))=0,len(trim(BN#))=0,len(trim(BP#))=0)">
			<!-- Hard coded -->
			<APPLICABLEFROM>20170701</APPLICABLEFROM>
			<!-- Hard coded -->
			<CALCULATIONTYPE>On Value</CALCULATIONTYPE>
			<!-- HSN Desc -->
			<HSN COLUMNREFERENCE="AK"/>
			<!-- HSN Code -->
			<HSNCODE COLUMNREFERENCE="AL"/>

			<TAXABILITY FORMULA="=If(BL#+BN#+BP#+BR#+BT#&gt;0,&quot;Taxable&quot;,&quot;Exempt&quot;)"/>
			<STATEWISEDETAILS.LIST>
				<STATENAME>~[~ Any</STATENAME>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Central Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(BN#&gt;0,BN#,If(BL#&gt;0,Round(BL#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD FORMULA="=if(Round(BS#,2)=0,&quot;State Tax&quot;,&quot;UT Tax&quot;)"/>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE SKIP="=Round(BQ#,2)=0" FORMULA="=If(BP#&gt;0,BP#,If(BL#&gt;0,Round(BL#/2,2),0))"/>
					<GSTRATE SKIP="=Round(BS#,2)=0" FORMULA="=If(BR#&gt;0,BR#,If(BL#&gt;0,Round(BL#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Integrated Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(BL#&gt;0,BL#,BN#+BP#)"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Cess</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=if(Round(BU#,2)=0,0,BT#)"/>
				</RATEDETAILS.LIST>
			</STATEWISEDETAILS.LIST>
			<TEMPGSTDETAILSLABRATES.LIST>
			</TEMPGSTDETAILSLABRATES.LIST>
		</GSTDETAILS.LIST>
	</MASTER>
	<VOUCHER8>
		<GUID FORMULA="=+&quot;udi-H6W7QN-&quot; &amp; A# &amp; &quot;-&quot; &amp; C# &amp; &quot;-&quot; &amp; E#"/>
		<DATE COLUMNREFERENCE="E"/>
		<EFFECTIVEDATE COLUMNREFERENCE="E"/>
		<VOUCHERTYPENAME COLUMNREFERENCE="C"/>
		<VOUCHERNUMBER COLUMNREFERENCE="D"/>
		<REFERENCE COLUMNREFERENCE="F"/>
		<NARRATION COLUMNREFERENCE="CO"/>
		<ISINVOICE>Yes</ISINVOICE>
		<PERSISTEDVIEW FORMULA="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;Accounting Voucher View&quot;,&quot;Invoice Voucher View&quot;)"/>
		<!-- Actual vs Billed qty -->
		<DIFFACTUALQTY FORMULA="=if(len(trim(AN#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<!-- For Purchase -->
		<UDF:REFERENCEDATE.LIST DESC="`ReferenceDate`" ISLIST="YES" TYPE="Date">
			<UDF:REFERENCEDATE DESC="`ReferenceDate`" COLUMNREFERENCE="G"/>
		</UDF:REFERENCEDATE.LIST>
		<REFERENCEDATE COLUMNREFERENCE="G"/>
		<!-- GSTIN / UIN -->
		<PARTYGSTIN COLUMNREFERENCE="J"/>
		<STATENAME COLUMNREFERENCE="K"/>
		<PARTYLEDGERNAME COLUMNREFERENCE="H"/>
		<BASICBASEPARTYNAME COLUMNREFERENCE="H"/>
		<!-- If Consignee details are NOT empty, then pickup buyer details here -->
		<PARTYNAME FORMULA="=if(len(trim(L#))=0,H#,L#)"/>
		<ADDRESS.LIST TYPE="String" SKIP="=And(len(trim(S#))=0,len(trim(T#))=0,len(trim(U#))=0,len(trim(V#))=0)">
			<ADDRESS COLUMNREFERENCE="M"/>
			<ADDRESS COLUMNREFERENCE="N"/>
			<ADDRESS COLUMNREFERENCE="O"/>
			<ADDRESS COLUMNREFERENCE="P"/>
			<ADDRESS COLUMNREFERENCE="Q"/>
		</ADDRESS.LIST>
		<!-- If Consignee details are empty, then pickup buyer details here -->
		<BASICBUYERNAME FORMULA="=if(len(trim(R#))=0,if(len(trim(L#))=0,H#,L#),R#)"/>
		<BASICBUYERADDRESS.LIST TYPE="String" SKIP="=And(len(trim(S#))=0,len(trim(T#))=0,len(trim(U#))=0,len(trim(V#))=0,len(trim(M#))=0,len(trim(N#))=0,len(trim(O#))=0,len(trim(P#))=0)">
			<BASICBUYERADDRESS FORMULA="=if(len(trim(S#))=0,M#,S#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(T#))=0,N#,T#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(U#))=0,O#,U#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(V#))=0,P#,V#)"/>
		</BASICBUYERADDRESS.LIST>
		<CONSIGNEEGSTIN COLUMNREFERENCE="W"/>
		<!-- For Sales and Purchase only only -->
		<INVOICEDELNOTES.LIST SCROLL="YES" SKIP="=not(And(Or(len(trim(Z#))&gt;0,len(trim(AA#))&gt;0),Or(trim(lower(B#[1]))=&quot;sales&quot;,trim(lower(B#[1]))=&quot;purchase&quot;)))">
			<BASICSHIPPINGDATE COLUMNREFERENCE="AA"/>
			<BASICSHIPDELIVERYNOTE COLUMNREFERENCE="Z"/>
		</INVOICEDELNOTES.LIST>
		<!-- Order list -->
		<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice -->
		<INVOICEORDERLIST.LIST SCROLL="YES" SKIP="=Or(len(trim(X#))=0,trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;)">
			<BASICORDERDATE COLUMNREFERENCE="Y"/>
			<BASICPURCHASEORDERNO COLUMNREFERENCE="X"/>
		</INVOICEORDERLIST.LIST>
		<!-- Order details -->
		<BASICDUEDATEOFPYMT COLUMNREFERENCE="AB"/>
		<BASICORDERREF COLUMNREFERENCE="AC"/>
		<BASICORDERTERMS.LIST TYPE="String">
			<BASICORDERTERMS COLUMNREFERENCE="AD"/>
		</BASICORDERTERMS.LIST>
		<!-- Despatch details -->
		<!-- Despatch Document No -->
		<BASICSHIPDOCUMENTNO COLUMNREFERENCE="AE"/>
		<!-- Despatch through -->
		<BASICSHIPPEDBY COLUMNREFERENCE="AF"/>
		<!-- Destination -->
		<BASICFINALDESTINATION COLUMNREFERENCE="AG"/>
		<!-- Party Ledger -->
		<LEDGERENTRIES.LIST ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(I#))=0,H#,I#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;No&quot;,&quot;Yes&quot;)"/>
			<AMOUNT FORMULA="=Round({Round(AR#,2)+Round(BM#,2)+Round(BO#,2)+Round(BQ#,2)+Round(BS#,2)+Round(BU#,2)}+{Round(BC#+BE#+BG#+BI#+BK#,2)}+{Round(CB#+CD#+CF#+CH#+CJ#,2)},if(trim(CP#)=&quot;yes&quot;,0,2))*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
      <BILLALLOCATIONS.LIST SKIP="=Len(trim(CL#))=0" SCROLL="YES">
        <NAME COLUMNREFERENCE="CL"/>
        <BILLTYPE COLUMNREFERENCE="CK"/>
        <BILLCREDITPERIOD COLUMNREFERENCE="CN"/>
        <AMOUNT FORMULA="=Round(CM#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
      </BILLALLOCATIONS.LIST>
      <BILLALLOCATIONS.LIST SKIP="=Or(Len(trim(CL#))&gt;0,Len(trim(D#))=0)">
      	<NAME FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),if(len(trim(F#))=0,D#,F#),D#)"/>
      	<BILLTYPE>New Ref</BILLTYPE>
      	<AMOUNT FORMULA="=Round({Round(AR#,2)+Round(BM#,2)+Round(BO#,2)+Round(BQ#,2)+Round(BS#,2)+Round(BU#,2)}+{Round(BC#+BE#+BG#+BI#+BK#,2)}+{Round(CB#+CD#+CF#+CH#+CJ#,2)},if(trim(CP#)=&quot;yes&quot;,0,2))*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
      </BILLALLOCATIONS.LIST>
		</LEDGERENTRIES.LIST>
		<!-- Sales/Purchase Ledger -->
		<LEDGERENTRIES.LIST SCROLL="YES" SKIP="=Not(And(len(trim(AI#))=0,len(trim(AJ#))=0))" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(AY#))&gt;0,AY#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE&quot;,&quot;SALE&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(AR#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger1 before taxes -->
		<LEDGERENTRIES.LIST SKIP="={Round(BC#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BB"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BC#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger2 before taxes -->
		<LEDGERENTRIES.LIST SKIP="={Round(BE#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BD"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BE#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger3 before taxes -->
		<LEDGERENTRIES.LIST SKIP="={Round(BG#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BF"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BG#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger4 before taxes -->
		<LEDGERENTRIES.LIST SKIP="={Round(BI#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BH"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BI#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger5 before taxes -->
		<LEDGERENTRIES.LIST SKIP="={Round(BK#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BJ"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BK#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- IGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(BV#))=0,trim(BL#),trim(BV#))" SKIP="={Round(BM#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BV#))&gt;0,BV#,if(Or(IsError(Round(BL#,2)),len(trim(BL#))=0,BL#=0),&quot;&quot;,&quot;IGST &quot; &amp; BL# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BM#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- CGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(BW#))=0,trim(BN#),trim(BW#))" SKIP="={Round(BO#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BW#))&gt;0,BW#,if(Or(IsError(Round(BN#,2)),len(trim(BN#))=0,BN#=0),&quot;&quot;,&quot;CGST &quot; &amp; BN# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BO#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- SGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(BX#))=0,trim(BP#),trim(BX#))" SKIP="={Round(BQ#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BX#))&gt;0,BX#,if(Or(IsError(Round(BP#,2)),len(trim(BP#))=0,BP#=0),&quot;&quot;,&quot;SGST &quot; &amp; BP# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BQ#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- UT Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(BY#))=0,trim(BR#),trim(BY#))" SKIP="={Round(BS#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BY#))&gt;0,BY#,if(Or(IsError(Round(BR#,2)),len(trim(BR#))=0,BR#=0),&quot;&quot;,&quot;UT &quot; &amp; BR# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BS#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Cess Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(BZ#))=0,trim(BT#),trim(BZ#))" SKIP="={Round(BU#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BZ#))&gt;0,BZ#,if(Or(IsError(Round(BT#,2)),len(trim(BT#))=0,BT#=0),&quot;&quot;,&quot;Cess &quot; &amp; BT# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BU#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger1 -->
		<LEDGERENTRIES.LIST SKIP="={Round(CB#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CA"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CB#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger2 -->
		<LEDGERENTRIES.LIST SKIP="={Round(CD#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CC"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CD#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger3 -->
		<LEDGERENTRIES.LIST SKIP="={Round(CF#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CE"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CF#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger4 -->
		<LEDGERENTRIES.LIST SKIP="={Round(CH#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CG"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CH#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger5 -->
		<LEDGERENTRIES.LIST SKIP="={Round(CJ#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CI"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CJ#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Round Off Ledger -->
		<LEDGERENTRIES.LIST SKIP="=Or(Not(trim(CP#)=&quot;yes&quot;),Round(Round({Round(AR#,2)+Round(BM#,2)+Round(BO#,2)+Round(BQ#,2)+Round(BS#,2)+Round(BU#,2)}+{Round(BC#+BE#+BG#+BI#+BK#,2)}+{Round(CB#+CD#+CF#+CH#+CJ#,2)},0)-Round({Round(AR#,2)+Round(BM#,2)+Round(BO#,2)+Round(BQ#,2)+Round(BS#,2)+Round(BU#,2)}+{Round(BC#+BE#+BG#+BI#+BK#,2)}+{Round(CB#+CD#+CF#+CH#+CJ#,2)},2),2)=0)" ALTERNATETAGNAME="=if(And(len(trim(AI#))=0,len(trim(AJ#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CQ#))=0,&quot;Round Off&quot;,CQ#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(Round({Round(AR#,2)+Round(BM#,2)+Round(BO#,2)+Round(BQ#,2)+Round(BS#,2)+Round(BU#,2)}+{Round(BC#+BE#+BG#+BI#+BK#,2)}+{Round(CB#+CD#+CF#+CH#+CJ#,2)},0)-Round({Round(AR#,2)+Round(BM#,2)+Round(BO#,2)+Round(BQ#,2)+Round(BS#,2)+Round(BU#,2)}+{Round(BC#+BE#+BG#+BI#+BK#,2)}+{Round(CB#+CD#+CF#+CH#+CJ#,2)},2),2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- StockItems -->
		<ALLINVENTORYENTRIES.LIST SCROLL="YES" SKIP="=And(len(trim(AI#))=0,len(trim(AJ#))=0)">
			<BASICUSERDESCRIPTION.LIST SKIP="=And(len(trim(AS#))=0,len(trim(AT#))=0,len(trim(AU#))=0)">
				<BASICUSERDESCRIPTION COLUMNREFERENCE="AS"/>
				<BASICUSERDESCRIPTION COLUMNREFERENCE="AT"/>
				<BASICUSERDESCRIPTION COLUMNREFERENCE="AU"/>
			</BASICUSERDESCRIPTION.LIST>
			<STOCKITEMNAME FORMULA="=if(len(trim(AJ#))=0,AI#,AJ#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<RATE COLUMNREFERENCE="AP"/>
			<DISCOUNT COLUMNREFERENCE="AQ"/>
			<AMOUNT FORMULA="=Round(AR#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
			<ACTUALQTY FORMULA="=if(len(trim(AN#))=0,AO#,AN#)"/>
			<BILLEDQTY COLUMNREFERENCE="AO"/>
			<ACCOUNTINGALLOCATIONS.LIST>
				<LEDGERNAME FORMULA="=if(len(trim(AY#))&gt;0,AY#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE&quot;,&quot;SALE&quot;))"/>
				<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
				<AMOUNT FORMULA="=Round(AR#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
				<!-- Cost centre details -->
				<CATEGORYALLOCATIONS.LIST SKIP="=len(trim(BA#))=0">
					<CATEGORY FORMULA="=if(len(trim(AZ#))=0,&quot;Primary Cost Category&quot;,AZ#)"/>
					<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
					<COSTCENTREALLOCATIONS.LIST>
						<NAME COLUMNREFERENCE="BA"/>
						<AMOUNT FORMULA="=Round(AR#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
					</COSTCENTREALLOCATIONS.LIST>
				</CATEGORYALLOCATIONS.LIST>
			</ACCOUNTINGALLOCATIONS.LIST>
			<BATCHALLOCATIONS.LIST>
				<!-- Godown details -->
				<GODOWNNAME FORMULA="=if(len(trim(AH#))=0,&quot;Main Location&quot;,AH#)"/>
				<DESTINATIONGODOWNNAME FORMULA="=if(len(trim(AH#))=0,&quot;Main Location&quot;,AH#)"/>
				<!-- Batch details -->
				<BATCHNAME FORMULA="=if(len(trim(AV#))=0,&quot;Primary Batch&quot;,AV#)"/>
				<MFDON SKIP="=Len(trim(AW#))=0" COLUMNREFERENCE="AW"/>
				<EXPIRYPERIOD SKIP="=Len(trim(AX#))=0" COLUMNREFERENCE="AX"/>
				<AMOUNT FORMULA="=Round(AR#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
				<ACTUALQTY FORMULA="=if(len(trim(AN#))=0,AO#,AN#)"/>
				<BILLEDQTY COLUMNREFERENCE="AO"/>
				<!-- For Sales Order and Purchase Order - Column F# -->
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice - Column X# -->
				<ORDERNO FORMULA="=if(Or(trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;),F#[1],X#[1])"/>
				<!-- For Sales Order and Purchase Order - Column E# -->
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice - Column Y# -->
				<ORDERDUEDATE FORMULA="=if(Or(trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;),E#[1],Y#[1])"/>
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice -->
				<TRACKINGNUMBER SKIP="=not(Or(trim(lower(B#[1]))=&quot;delivery note&quot;,trim(lower(B#[1]))=&quot;sales&quot;,trim(lower(B#[1]))=&quot;receipt note&quot;,trim(lower(B#[1]))=&quot;purchase&quot;))" COLUMNREFERENCE="Z"/>
			</BATCHALLOCATIONS.LIST>
		</ALLINVENTORYENTRIES.LIST>
	</VOUCHER8>
</XMLTAGS>

