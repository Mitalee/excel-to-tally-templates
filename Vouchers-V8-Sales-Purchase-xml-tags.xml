<!-- These XML tags are added to Excel sheet at run-time by UDIMAGIC  -->
<XMLTAGS CELLREFERENCE="A1" FROMROW="3" xmlns:UDF="TallyUDF">
	<!-- Specifies that this (i.e Column as mentioned above) is the key field -->
	<COLUMNNAME.LIST>
		<COLUMNNAME>ID</COLUMNNAME>
		<COLUMNNAME>NAME</COLUMNNAME>
	</COLUMNNAME.LIST>
	<!-- Create VOUCHERTYPE Master -->
	<MASTER TYPE="VOUCHERTYPE">
		<NAME.LIST TYPE="String">
			<NAME COLUMNREFERENCE="C"/>
		</NAME.LIST>
		<PARENT COLUMNREFERENCE="B"/>
		<!-- Is deemed positive not required -->
		<NUMBERINGMETHOD>Manual</NUMBERINGMETHOD>
	</MASTER>
	<!-- Create Sales/Purchase Ledgers -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BB#))&gt;0,BB#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE&quot;,&quot;SALE&quot;))"/>
		</NAME.LIST>
		<PARENT FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;Purchase Accounts&quot;,&quot;Sales Accounts&quot;)"/>
		<TAXTYPE>Others</TAXTYPE>
		<ISBILLWISEON>No</ISBILLWISEON>
		<ISCOSTCENTRESON FORMULA="=if(len(trim(BD#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<AFFECTSSTOCK FORMULA="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;No&quot;,&quot;Yes&quot;)"/>
		<USEFORVAT>No</USEFORVAT>
		<GSTAPPLICABLE SKIP="=Round(BO#+BQ#+BS#+BU#+BW#,2)=0" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply : Goods or Services -->
		<GSTTYPEOFSUPPLY FORMULA="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;Services&quot;,&quot;Goods&quot;)"/>
	</MASTER>
	<!-- Create Party LEDGER Masters -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="H"/>
			<NAME COLUMNREFERENCE="I"/>
		</NAME.LIST>
		<OLDNAME FORMULA="=if(len(trim(I#))=0,H#,I#)"/>
		<PARENT FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;Sundry Creditors&quot;,&quot;Sundry Debtors&quot;)"/>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<ADDITIONALNAME COLUMNREFERENCE="H"/>
		<ISBILLWISEON>Yes</ISBILLWISEON>
		<!-- GST fields for PARTY LEDGER -->
		<GSTREGISTRATIONTYPE SKIP="=len(trim(J#))=0">Regular</GSTREGISTRATIONTYPE>
		<!-- GSTIN / UIN -->
		<PARTYGSTIN COLUMNREFERENCE="J"/>
		<COUNTRYNAME SKIP="=len(trim(K#))=0">India</COUNTRYNAME>
		<COUNTRYOFRESIDENCE SKIP="=len(trim(K#))=0">India</COUNTRYOFRESIDENCE>
		<STATENAME COLUMNREFERENCE="K"/>
		<LEDSTATENAME COLUMNREFERENCE="K"/>
	</MASTER>
	<!-- Create IGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BY#))&gt;0,BY#,if(Or(IsError(Round(BO#,2)),len(trim(BO#))=0,BO#=0),&quot;&quot;,&quot;IGST &quot; &amp; BO# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Integrated Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create CGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(BZ#))&gt;0,BZ#,if(Or(IsError(Round(BQ#,2)),len(trim(BQ#))=0,BQ#=0),&quot;&quot;,&quot;CGST &quot; &amp; BQ# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Central Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create SGST TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CA#))&gt;0,CA#,if(Or(IsError(Round(BS#,2)),len(trim(BS#))=0,BS#=0),&quot;&quot;,&quot;SGST &quot; &amp; BS# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>State Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
    <!-- TAXRATE not included as it may create confusion -->
    <!-- <RATEOFTAXCALCULATION COLUMNREFERENCE="BS"/> -->
	</MASTER>
	<!-- Create UT TAX LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CB#))&gt;0,CB#,if(Or(IsError(Round(BU#,2)),len(trim(BU#))=0,BU#=0),&quot;&quot;,&quot;UT &quot; &amp; BU# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>UT Tax</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create Cess LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CC#))&gt;0,CC#,if(Or(IsError(Round(BW#,2)),len(trim(BW#))=0,BW#=0),&quot;&quot;,&quot;UT &quot; &amp; BW# &amp; &quot;%&quot;))"/>
		</NAME.LIST>
		<PARENT>Duties &amp; Taxes</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
		<GSTAPPLICABLE FORMULA="=&quot;~[~ Applicable&quot;"/>
		<GSTDUTYHEAD>Cess</GSTDUTYHEAD>
		<TAXTYPE>GST</TAXTYPE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BE"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BG"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BI"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BK"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs before taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BM"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
		<TAXTYPE>Others</TAXTYPE>
		<GSTAPPLICABLE>~[~ Not Applicable</GSTAPPLICABLE>
		<APPROPRIATEFOR>GST</APPROPRIATEFOR>
		<GSTAPPROPRIATETO>Both</GSTAPPROPRIATETO>
		<EXCISEALLOCTYPE>Based on Value</EXCISEALLOCTYPE>
		<ISEXCISEAPPLICABLE>Yes</ISEXCISEAPPLICABLE>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CD"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CF"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CH"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CJ"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Other LEDGERs after taxes -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="CL"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Create Round Off LEDGER Master -->
	<MASTER TYPE="LEDGER">
		<NAME.LIST>
			<NAME FORMULA="=if(len(trim(CT#))=0,&quot;Round Off&quot;,CT#)"/>
		</NAME.LIST>
		<PARENT>Indirect Expenses</PARENT>
		<ISCOSTCENTRESON>No</ISCOSTCENTRESON>
	</MASTER>
	<!-- Cost Category -->
	<MASTER TYPE="COSTCATEGORY">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BC"/>
		</NAME.LIST>
		<ALLOCATEREVENUE>Yes</ALLOCATEREVENUE>
		<ALLOCATENONREVENUE>Yes</ALLOCATENONREVENUE>
	</MASTER>
	<!-- Cost Centre -->
	<MASTER TYPE="COSTCENTRE">
		<NAME.LIST>
			<NAME COLUMNREFERENCE="BD"/>
		</NAME.LIST>
		<CATEGORY SKIP="=Len(trim(BC#))=0" COLUMNREFERENCE="BC"/>
		<REVENUELEDFOROPBAL>No</REVENUELEDFOROPBAL>
		<AFFECTSSTOCK>No</AFFECTSSTOCK>
	</MASTER>
	<!-- Create UNIT Master -->
	<MASTER TYPE="UNIT">
		<NAME COLUMNREFERENCE="AP"/>
		<ISSIMPLEUNIT>Yes</ISSIMPLEUNIT>
		<GSTREPUOM SKIP="=Not(trim(AP#)=&quot;nos&quot;)">NOS-NUMBERS</GSTREPUOM>
		<GSTREPUOM SKIP="=Not(trim(AP#)=&quot;kgs&quot;)">KGS-KILOGRAMS</GSTREPUOM>
	</MASTER>
	<!-- Create Godown Masters -->
	<MASTER TYPE="GODOWN">
		<NAME COLUMNREFERENCE="AK"/>
		<PARENT/>
	</MASTER>
	<!-- Create STOCKITEM Masters -->
	<MASTER TYPE="STOCKITEM">
    <OLDNAME FORMULA="=if(len(trim(AM#))=0,AL#,AM#)"/>
    <!-- Overwrite existing ITEMs -->
    <IMPORTDUPS FORMULA="=if(And(Not(IsError(CU#)),len(trim(CU#))&gt;0,CU#=&quot;yes&quot;),&quot;Modify with new data&quot;,&quot;Ignore Duplicates&quot;)"/>
    <!-- Create new item with Name or PartNo -->
    <NAME FORMULA="=if(len(trim(AL#))=0,AM#,AL#)"/>
		<!-- SKIP if both Name and Part No are empty -->
    <ADDITIONALNAME SKIP="=Or(len(trim(AM#))=0,len(trim(AL#))=0)" COLUMNREFERENCE="AM"/>
		<BASEUNITS COLUMNREFERENCE="AP"/>
		<ISBATCHWISEON FORMULA="=if((len(trim(AY#))+len(trim(AZ#))+len(trim(BA#)))=0,&quot;&quot;,&quot;Yes&quot;)"/>
		<HASMFGDATE FORMULA="=if(len(trim(AZ#))=0,&quot;&quot;,&quot;Yes&quot;)"/>
		<ISPERISHABLEON FORMULA="=if(len(trim(BA#))=0,&quot;&quot;,&quot;Yes&quot;)"/>
		<!-- GST details -->
		<GSTAPPLICABLE SKIP="=And(len(trim(BO#))=0,len(trim(BQ#))=0,len(trim(BS#))=0)" FORMULA="=&quot;~[~ Applicable&quot;"/>
		<!-- Type of supply : Hard coded -->
		<GSTTYPEOFSUPPLY>Goods</GSTTYPEOFSUPPLY>
		<GSTDETAILS.LIST SKIP="=And(len(trim(BO#))=0,len(trim(BQ#))=0,len(trim(BS#))=0)">
			<!-- Hard coded -->
			<APPLICABLEFROM>20170701</APPLICABLEFROM>
			<!-- Hard coded -->
			<CALCULATIONTYPE>On Value</CALCULATIONTYPE>
			<!-- HSN Desc -->
			<HSN COLUMNREFERENCE="AN"/>
			<!-- HSN Code -->
			<HSNCODE COLUMNREFERENCE="AO"/>
			<TAXABILITY FORMULA="=If(BO#+BQ#+BS#+BU#+BW#&gt;0,&quot;Taxable&quot;,&quot;Exempt&quot;)"/>
			<STATEWISEDETAILS.LIST>
				<STATENAME>~[~ Any</STATENAME>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Central Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(BQ#&gt;0,BQ#,If(BO#&gt;0,Round(BO#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD FORMULA="=if(Round(BV#,2)=0,&quot;State Tax&quot;,&quot;UT Tax&quot;)"/>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE SKIP="=Round(BT#,2)=0" FORMULA="=If(BS#&gt;0,BS#,If(BO#&gt;0,Round(BO#/2,2),0))"/>
					<GSTRATE SKIP="=Round(BV#,2)=0" FORMULA="=If(BU#&gt;0,BU#,If(BO#&gt;0,Round(BO#/2,2),0))"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Integrated Tax</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=If(BO#&gt;0,BO#,BQ#+BS#)"/>
				</RATEDETAILS.LIST>
				<RATEDETAILS.LIST>
					<GSTRATEDUTYHEAD>Cess</GSTRATEDUTYHEAD>
					<GSTRATEVALUATIONTYPE>Based on Value</GSTRATEVALUATIONTYPE>
					<GSTRATE FORMULA="=if(Round(BX#,2)=0,0,BW#)"/>
				</RATEDETAILS.LIST>
			</STATEWISEDETAILS.LIST>
			<TEMPGSTDETAILSLABRATES.LIST>
			</TEMPGSTDETAILSLABRATES.LIST>
		</GSTDETAILS.LIST>
	</MASTER>
	<VOUCHER8>
		<GUID FORMULA="=+&quot;udi-H6W7QN-&quot; &amp; A# &amp; &quot;-&quot; &amp; C# &amp; &quot;-&quot; &amp; E#"/>
		<DATE COLUMNREFERENCE="E"/>
		<EFFECTIVEDATE COLUMNREFERENCE="E"/>
		<VOUCHERTYPENAME COLUMNREFERENCE="C"/>
		<VOUCHERNUMBER COLUMNREFERENCE="D"/>
		<REFERENCE COLUMNREFERENCE="F"/>
		<NARRATION COLUMNREFERENCE="CR"/>
		<ISINVOICE>Yes</ISINVOICE>
		<PERSISTEDVIEW FORMULA="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;Accounting Voucher View&quot;,&quot;Invoice Voucher View&quot;)"/>
		<!-- Actual vs Billed qty -->
		<DIFFACTUALQTY FORMULA="=if(len(trim(AQ#))=0,&quot;No&quot;,&quot;Yes&quot;)"/>
		<!-- For Purchase -->
		<UDF:REFERENCEDATE.LIST DESC="`ReferenceDate`" ISLIST="YES" TYPE="Date">
			<UDF:REFERENCEDATE DESC="`ReferenceDate`" COLUMNREFERENCE="G"/>
		</UDF:REFERENCEDATE.LIST>
		<REFERENCEDATE COLUMNREFERENCE="G"/>
		<!-- GSTIN / UIN -->
		<PARTYGSTIN COLUMNREFERENCE="J"/>
		<STATENAME COLUMNREFERENCE="K"/>
		<PLACEOFSUPPLY COLUMNREFERENCE="L"/>
		<PARTYLEDGERNAME COLUMNREFERENCE="H"/>
		<BASICBASEPARTYNAME COLUMNREFERENCE="H"/>
		<!-- If Consignee details are NOT empty, then pickup buyer details here -->
		<PARTYNAME FORMULA="=if(len(trim(M#))=0,H#,M#)"/>
		<ADDRESS.LIST TYPE="String" SKIP="=And(len(trim(S#))=0,len(trim(T#))=0,len(trim(U#))=0,len(trim(V#))=0,len(trim(W#))=0,len(trim(X#))=0)">
			<ADDRESS COLUMNREFERENCE="N"/>
			<ADDRESS COLUMNREFERENCE="O"/>
			<ADDRESS COLUMNREFERENCE="P"/>
			<ADDRESS COLUMNREFERENCE="Q"/>
			<ADDRESS COLUMNREFERENCE="R"/>
		</ADDRESS.LIST>
		<!-- If Consignee details are empty, then pickup buyer details here -->
		<BASICBUYERNAME FORMULA="=if(len(trim(S#))=0,if(len(trim(M#))=0,H#,M#),S#)"/>
		<BASICBUYERADDRESS.LIST TYPE="String" SKIP="=And(len(trim(S#))=0,len(trim(T#))=0,len(trim(U#))=0,len(trim(V#))=0,len(trim(W#))=0,len(trim(X#))=0,len(trim(N#))=0,len(trim(O#))=0,len(trim(P#))=0,len(trim(Q#))=0,len(trim(R#))=0)">
			<BASICBUYERADDRESS FORMULA="=if(len(trim(S#))=0,N#,T#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(S#))=0,O#,U#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(S#))=0,P#,V#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(S#))=0,Q#,W#)"/>
			<BASICBUYERADDRESS FORMULA="=if(len(trim(S#))=0,R#,X#)"/>
		</BASICBUYERADDRESS.LIST>
		<CONSIGNEESTATENAME COLUMNREFERENCE="Y"/>
		<CONSIGNEEGSTIN COLUMNREFERENCE="Z"/>
		<!-- For Sales and Purchase only only -->
		<INVOICEDELNOTES.LIST SCROLL="YES" SKIP="=not(And(Or(len(trim(AC#))&gt;0,len(trim(AD#))&gt;0),Or(trim(lower(B#[1]))=&quot;sales&quot;,trim(lower(B#[1]))=&quot;purchase&quot;)))">
			<BASICSHIPPINGDATE COLUMNREFERENCE="AD"/>
			<BASICSHIPDELIVERYNOTE COLUMNREFERENCE="AC"/>
		</INVOICEDELNOTES.LIST>
		<!-- Order list -->
		<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice -->
		<INVOICEORDERLIST.LIST SCROLL="YES" SKIP="=Or(len(trim(AA#))=0,trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;)">
			<BASICORDERDATE COLUMNREFERENCE="AB"/>
			<BASICPURCHASEORDERNO COLUMNREFERENCE="AA"/>
		</INVOICEORDERLIST.LIST>
		<!-- Order details -->
		<BASICDUEDATEOFPYMT COLUMNREFERENCE="AE"/>
		<BASICORDERREF COLUMNREFERENCE="AF"/>
		<BASICORDERTERMS.LIST TYPE="String">
			<BASICORDERTERMS COLUMNREFERENCE="AG"/>
		</BASICORDERTERMS.LIST>
		<!-- Despatch details -->
		<!-- Despatch Document No -->
		<BASICSHIPDOCUMENTNO COLUMNREFERENCE="AH"/>
		<!-- Despatch through -->
		<BASICSHIPPEDBY COLUMNREFERENCE="AI"/>
		<!-- Destination -->
		<BASICFINALDESTINATION COLUMNREFERENCE="AJ"/>

		<!-- Other GST details -->
		<GSTNATUREOFRETURN SKIP="=IsError(Match(trim(B#[1]),\123&quot;credit note&quot;,&quot;debit note&quot;\125,0))">01-Sales Return</GSTNATUREOFRETURN>

		<!-- Party Ledger -->
		<LEDGERENTRIES.LIST ALTERNATETAGNAME="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(I#))=0,H#,I#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;No&quot;,&quot;Yes&quot;)"/>
			<AMOUNT FORMULA="=Round({Round(AU#,2)+Round(BP#,2)+Round(BR#,2)+Round(BT#,2)+Round(BV#,2)+Round(BX#,2)}+{Round(BF#+BH#+BJ#+BL#+BN#,2)}+{Round(CE#+CG#+CI#+CK#+CM#,2)},if(trim(CS#)=&quot;yes&quot;,0,2))*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
			<BILLALLOCATIONS.LIST SKIP="=Len(trim(CO#))=0" SCROLL="YES">
				<NAME COLUMNREFERENCE="CO"/>
				<BILLTYPE COLUMNREFERENCE="CN"/>
				<BILLCREDITPERIOD COLUMNREFERENCE="CQ"/>
				<AMOUNT FORMULA="=Round(CP#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
			</BILLALLOCATIONS.LIST>
			<BILLALLOCATIONS.LIST SKIP="=Or(Len(trim(CO#))&gt;0,Len(trim(D#))=0)">
				<NAME FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),if(len(trim(F#))=0,D#,F#),D#)"/>
				<BILLTYPE>New Ref</BILLTYPE>
				<AMOUNT FORMULA="=Round({Round(AU#,2)+Round(BP#,2)+Round(BR#,2)+Round(BT#,2)+Round(BV#,2)+Round(BX#,2)}+{Round(BF#+BH#+BJ#+BL#+BN#,2)}+{Round(CE#+CG#+CI#+CK#+CM#,2)},if(trim(CS#)=&quot;yes&quot;,0,2))*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),1,-1)"/>
			</BILLALLOCATIONS.LIST>
		</LEDGERENTRIES.LIST>
		<!-- Sales/Purchase Ledger -->
		<LEDGERENTRIES.LIST SCROLL="YES" SKIP="=Not(And(len(trim(AL#))=0,len(trim(AM#))=0,Round(AU#,2)&lt;&gt;0))" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BB#))&gt;0,BB#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE&quot;,&quot;SALE&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(AU#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger1 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BE#)" SKIP="={Round(BF#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BE"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BF#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger2 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BG#)" SKIP="={Round(BH#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BG"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BH#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger3 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BI#)" SKIP="={Round(BJ#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BI"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BJ#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger4 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BK#)" SKIP="={Round(BL#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BK"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BL#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger5 before taxes -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(BM#)" SKIP="={Round(BN#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="BM"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BN#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- IGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(BY#))=0,trim(BO#),trim(BY#))" SKIP="={Round(BP#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BY#))&gt;0,BY#,if(Or(IsError(Round(BO#,2)),len(trim(BO#))=0,BO#=0),&quot;&quot;,&quot;IGST &quot; &amp; BO# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BP#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- CGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(BZ#))=0,trim(BQ#),trim(BZ#))" SKIP="={Round(BR#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(BZ#))&gt;0,BZ#,if(Or(IsError(Round(BQ#,2)),len(trim(BQ#))=0,BQ#=0),&quot;&quot;,&quot;CGST &quot; &amp; BQ# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BR#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- SGST Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CA#))=0,trim(BS#),trim(CA#))" SKIP="={Round(BT#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CA#))&gt;0,CA#,if(Or(IsError(Round(BS#,2)),len(trim(BS#))=0,BS#=0),&quot;&quot;,&quot;SGST &quot; &amp; BS# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BT#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- UT Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CB#))=0,trim(BU#),trim(CB#))" SKIP="={Round(BV#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CB#))&gt;0,CB#,if(Or(IsError(Round(BU#,2)),len(trim(BU#))=0,BU#=0),&quot;&quot;,&quot;UT &quot; &amp; BU# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BV#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Cess Ledger -->
		<LEDGERENTRIES.LIST GROUPBY="=if(len(trim(CC#))=0,trim(BW#),trim(CC#))" SKIP="={Round(BX#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CC#))&gt;0,CC#,if(Or(IsError(Round(BW#,2)),len(trim(BW#))=0,BW#=0),&quot;&quot;,&quot;Cess &quot; &amp; BW# &amp; &quot;%&quot;))"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(BX#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger1 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CD#)" SKIP="={Round(CE#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CD"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CE#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger2 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CF#)" SKIP="={Round(CG#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CF"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CG#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger3 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CH#)" SKIP="={Round(CI#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CH"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CI#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger4 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CJ#)" SKIP="={Round(CK#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CJ"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CK#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Ledger5 -->
		<LEDGERENTRIES.LIST GROUPBY="=trim(CL#)" SKIP="={Round(CM#,2)}=0" ALTERNATETAGNAME="=if(And(len(trim(AL#[1]))=0,len(trim(AM#[1]))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME COLUMNREFERENCE="CL"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="={Round(CM#,2)}*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- Round Off Ledger -->
		<LEDGERENTRIES.LIST SKIP="=Or(Not(trim(CS#)=&quot;yes&quot;),Round(Round({Round(AU#,2)+Round(BP#,2)+Round(BR#,2)+Round(BT#,2)+Round(BV#,2)+Round(BX#,2)}+{Round(BF#+BH#+BJ#+BL#+BN#,2)}+{Round(CE#+CG#+CI#+CK#+CM#,2)},0)-Round({Round(AU#,2)+Round(BP#,2)+Round(BR#,2)+Round(BT#,2)+Round(BV#,2)+Round(BX#,2)}+{Round(BF#+BH#+BJ#+BL#+BN#,2)}+{Round(CE#+CG#+CI#+CK#+CM#,2)},2),2)=0)" ALTERNATETAGNAME="=if(And(len(trim(AL#))=0,len(trim(AM#))=0),&quot;ALLLEDGERENTRIES.LIST&quot;,&quot;&quot;)">
			<LEDGERNAME FORMULA="=if(len(trim(CT#))=0,&quot;Round Off&quot;,CT#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<AMOUNT FORMULA="=Round(Round({Round(AU#,2)+Round(BP#,2)+Round(BR#,2)+Round(BT#,2)+Round(BV#,2)+Round(BX#,2)}+{Round(BF#+BH#+BJ#+BL#+BN#,2)}+{Round(CE#+CG#+CI#+CK#+CM#,2)},0)-Round({Round(AU#,2)+Round(BP#,2)+Round(BR#,2)+Round(BT#,2)+Round(BV#,2)+Round(BX#,2)}+{Round(BF#+BH#+BJ#+BL#+BN#,2)}+{Round(CE#+CG#+CI#+CK#+CM#,2)},2),2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
		</LEDGERENTRIES.LIST>
		<!-- StockItems -->
		<ALLINVENTORYENTRIES.LIST SCROLL="YES" SKIP="=And(len(trim(AL#))=0,len(trim(AM#))=0)">
			<BASICUSERDESCRIPTION.LIST SKIP="=And(len(trim(AV#))=0,len(trim(AW#))=0,len(trim(AX#))=0)">
				<BASICUSERDESCRIPTION COLUMNREFERENCE="AV"/>
				<BASICUSERDESCRIPTION COLUMNREFERENCE="AW"/>
				<BASICUSERDESCRIPTION COLUMNREFERENCE="AX"/>
			</BASICUSERDESCRIPTION.LIST>
			<STOCKITEMNAME FORMULA="=if(len(trim(AM#))=0,AL#,AM#)"/>
			<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
			<RATE COLUMNREFERENCE="AS"/>
			<DISCOUNT COLUMNREFERENCE="AT"/>
			<AMOUNT FORMULA="=Round(AU#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
			<ACTUALQTY FORMULA="=if(len(trim(AQ#))=0,AR#,AQ#)"/>
			<BILLEDQTY COLUMNREFERENCE="AR"/>
			<ACCOUNTINGALLOCATIONS.LIST>
				<LEDGERNAME FORMULA="=if(len(trim(BB#))&gt;0,BB#,if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;debit note&quot;\125,0))),&quot;PURCHASE&quot;,&quot;SALE&quot;))"/>
				<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
				<AMOUNT FORMULA="=Round(AU#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
				<!-- Cost centre details -->
				<CATEGORYALLOCATIONS.LIST SKIP="=len(trim(BD#))=0">
					<CATEGORY FORMULA="=if(len(trim(BC#))=0,&quot;Primary Cost Category&quot;,BC#)"/>
					<ISDEEMEDPOSITIVE FORMULA="=if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),&quot;Yes&quot;,&quot;No&quot;)"/>
					<COSTCENTREALLOCATIONS.LIST>
						<NAME COLUMNREFERENCE="BD"/>
						<AMOUNT FORMULA="=Round(AU#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
					</COSTCENTREALLOCATIONS.LIST>
				</CATEGORYALLOCATIONS.LIST>
			</ACCOUNTINGALLOCATIONS.LIST>
			<BATCHALLOCATIONS.LIST>
				<!-- Godown details -->
				<GODOWNNAME FORMULA="=if(len(trim(AK#))=0,&quot;Main Location&quot;,AK#)"/>
				<DESTINATIONGODOWNNAME FORMULA="=if(len(trim(AK#))=0,&quot;Main Location&quot;,AK#)"/>
				<!-- Batch details -->
				<BATCHNAME FORMULA="=if(len(trim(AY#))=0,&quot;Primary Batch&quot;,AY#)"/>
				<MFDON SKIP="=Len(trim(AZ#))=0" COLUMNREFERENCE="AZ"/>
				<EXPIRYPERIOD SKIP="=Len(trim(BA#))=0" COLUMNREFERENCE="BA"/>
				<AMOUNT FORMULA="=Round(AU#,2)*if(Not(IsError(Match(trim(B#[1]),\123&quot;payment&quot;,&quot;purchase&quot;,&quot;purchase order&quot;,&quot;receipt note&quot;,&quot;credit note&quot;\125,0))),-1,1)"/>
				<ACTUALQTY FORMULA="=if(len(trim(AQ#))=0,AR#,AQ#)"/>
				<BILLEDQTY COLUMNREFERENCE="AR"/>
				<!-- For Sales Order and Purchase Order - Column F# -->
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice - Column AA# -->
				<ORDERNO FORMULA="=if(Or(trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;),F#[1],AA#[1])"/>
				<!-- For Sales Order and Purchase Order - Column E# -->
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice - Column AB# -->
				<ORDERDUEDATE FORMULA="=if(Or(trim(lower(B#[1]))=&quot;sales order&quot;,trim(lower(B#[1]))=&quot;purchase order&quot;),E#[1],AB#[1])"/>
				<!-- For Delivery Note, Sales Invoice, Receipt Note, Purchase Invoice -->
				<TRACKINGNUMBER SKIP="=not(Or(trim(lower(B#[1]))=&quot;delivery note&quot;,trim(lower(B#[1]))=&quot;sales&quot;,trim(lower(B#[1]))=&quot;receipt note&quot;,trim(lower(B#[1]))=&quot;purchase&quot;))" COLUMNREFERENCE="AC"/>
			</BATCHALLOCATIONS.LIST>
		</ALLINVENTORYENTRIES.LIST>
	</VOUCHER8>
</XMLTAGS>

